<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.22.1108.0821                               -->
<workbook original-version='18.1' source-build='2022.3.1 (20223.22.1108.0821)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Age Parameter' datatype='integer' name='[Age Parameter]' param-domain-type='range' role='measure' type='quantitative' value='12'>
        <calculation class='tableau' formula='12' />
        <range max='71' min='12' />
      </column>
    </datasource>
    <datasource caption='Olympics (olympics)' inline='true' name='federated.1mw1s5j13zsggd18nwrcv1xgel0d' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='olympics' name='excel-direct.0fpkhpb0gznwci1gf98w81jf6472'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Simos/Downloads/olympics.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0fpkhpb0gznwci1gf98w81jf6472' name='Olympics' table='[Olympics$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' lost='0' outcome='2' processed='39805'>
            <column datatype='string' name='Name' ordinal='0' />
            <column datatype='string' name='Gender' ordinal='1' />
            <column datatype='integer' name='Age' ordinal='2' />
            <column datatype='integer' name='Height' ordinal='3' />
            <column datatype='real' name='Weight' ordinal='4' />
            <column datatype='string' name='Team' ordinal='5' />
            <column datatype='integer' name='Year' ordinal='6' />
            <column datatype='string' name='Season' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='Sport' ordinal='9' />
            <column datatype='string' name='Event' ordinal='10' />
            <column datatype='string' name='Medal' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0fpkhpb0gznwci1gf98w81jf6472' name='Olympics' table='[Olympics$]' type='table'>
          <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' lost='0' outcome='2' processed='39805'>
            <column datatype='string' name='Name' ordinal='0' />
            <column datatype='string' name='Gender' ordinal='1' />
            <column datatype='integer' name='Age' ordinal='2' />
            <column datatype='integer' name='Height' ordinal='3' />
            <column datatype='real' name='Weight' ordinal='4' />
            <column datatype='string' name='Team' ordinal='5' />
            <column datatype='integer' name='Year' ordinal='6' />
            <column datatype='string' name='Season' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='Sport' ordinal='9' />
            <column datatype='string' name='Event' ordinal='10' />
            <column datatype='string' name='Medal' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Olympics]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L10001:no:A1:L10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Olympics]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[Olympics]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[Olympics]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Height</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Height]</local-name>
            <parent-name>[Olympics]</parent-name>
            <remote-alias>Height</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Weight]</local-name>
            <parent-name>[Olympics]</parent-name>
            <remote-alias>Weight</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[Olympics]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Olympics]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[Olympics]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Olympics]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sport</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sport]</local-name>
            <parent-name>[Olympics]</parent-name>
            <remote-alias>Sport</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Event]</local-name>
            <parent-name>[Olympics]</parent-name>
            <remote-alias>Event</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medal</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Medal]</local-name>
            <parent-name>[Olympics]</parent-name>
            <remote-alias>Medal</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
      <column datatype='string' name='[Team]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Olympics' datatype='table' name='[__tableau_internal_object_id__].[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]' role='measure' type='quantitative' />
      <column-instance column='[Gender]' derivation='Attribute' name='[attr:Gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[Age]' derivation='None' name='[none:Age:ok]' pivot='key' type='ordinal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
      <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Age Set' name='[Age Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='17' function='range' level='[none:Age:ok]' to='71' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group hidden='true' name='[Exclusions (Medal,Team)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Medal:nk]' />
          <groupfilter function='level-members' level='[none:Team:nk]' />
        </groupfilter>
      </group>
      <group caption='Year Set' name='[Year Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='2006' function='range' level='[none:Year:ok]' to='2016' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Beijing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Torino&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Sochi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rio de Janeiro&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;London&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Team:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina-1&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy-1&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway-1&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Quando Quando&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Satchmo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea-2&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China-3&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greece-1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Netherlands-2&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden-2&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chinese Taipei&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Galopin De La Font&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mistral Hojris&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pop Art&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Salinero&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea-1&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus-2&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bonaparte&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brazil-1&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba-1&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany-1&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;India-1&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mythilus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oxalis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Serbia and Montenegro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spain-2&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Whitini Star&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina-2&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Canada-1&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany-2&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy-2&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lucky Star&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway-2&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rambo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovakia-1&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Calimucho&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czech Republic-1&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Relampago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland-2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United States-2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United States-3&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brentina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Don Schufro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gran Gesto&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lancet&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Netherlands Antilles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russia-2&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ukraine-1&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States-1&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China-1&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Denmark-2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece-2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Refugee Olympic Athletes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Austria-1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Federated States of Micronesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia-1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Japan-1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia-2&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denmark-1&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania-1&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia-1&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cuba-2&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Great Britain-1&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;India-2&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nadine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Serbia-1&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Australia-2&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada-2&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Germany-3&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Great Britain-2&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Individual Olympic Athletes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia-2&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Austria-2&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brazil-2&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czech Republic-2&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Indonesia-2&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia-1&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Notavel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Briar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dow Jones&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Floresco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Netherlands-1&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russia-3&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden-1&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine-2&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belarus-1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Digby&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;France-1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ravel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor Leste&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romania-2&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clearwater&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Great Britain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenoaks Dundee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel-1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Latvia-2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poland-1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Switzerland-1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada-3&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malaysia-1&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sunrise&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Elvis Va&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France-2&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan-2&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orion&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovakia-2&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spain-1&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Whisper&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China-2&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Diabolo St Maurice&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Israel-2&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Poland-2&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia-1&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Solos Carex&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Gender:nk]' type='palette'>
            <map to='#00aaff'>
              <bucket>&quot;M&quot;</bucket>
            </map>
            <map to='#ff557f'>
              <bucket>&quot;F&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Medal:nk]' type='palette'>
            <map to='#a7a3a7'>
              <bucket>&quot;Silver&quot;</bucket>
            </map>
            <map to='#be5f00'>
              <bucket>&quot;Bronze&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
            <map to='#ffff00'>
              <bucket>&quot;Gold&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Gender:nk]' type='palette'>
            <map to='#00aaff'>
              <bucket>&quot;M&quot;</bucket>
            </map>
            <map to='#ff557f'>
              <bucket>&quot;F&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Greece&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Olympics' id='Olympics_DFDA6E1428DA446F8B264A58DF5ADF64'>
            <properties context=''>
              <relation connection='excel-direct.0fpkhpb0gznwci1gf98w81jf6472' name='Olympics' table='[Olympics$]' type='table'>
                <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' lost='0' outcome='2' processed='39805'>
                  <column datatype='string' name='Name' ordinal='0' />
                  <column datatype='string' name='Gender' ordinal='1' />
                  <column datatype='integer' name='Age' ordinal='2' />
                  <column datatype='integer' name='Height' ordinal='3' />
                  <column datatype='real' name='Weight' ordinal='4' />
                  <column datatype='string' name='Team' ordinal='5' />
                  <column datatype='integer' name='Year' ordinal='6' />
                  <column datatype='string' name='Season' ordinal='7' />
                  <column datatype='string' name='City' ordinal='8' />
                  <column datatype='string' name='Sport' ordinal='9' />
                  <column datatype='string' name='Event' ordinal='10' />
                  <column datatype='string' name='Medal' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Olympics (olympics)' name='federated.1mw1s5j13zsggd18nwrcv1xgel0d' />
          </datasources>
          <datasource-dependencies datasource='federated.1mw1s5j13zsggd18nwrcv1xgel0d'>
            <_.fcp.ObjectModelTableType.false...column caption='Olympics' datatype='integer' name='[__tableau_internal_object_id__].[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]' role='measure' type='quantitative' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Olympics' datatype='table' name='[__tableau_internal_object_id__].[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Olympics_DFDA6E1428DA446F8B264A58DF5ADF64:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Gender:nk]' />
              <text column='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[__tableau_internal_object_id__].[cnt:Olympics_DFDA6E1428DA446F8B264A58DF5ADF64:qk]' />
              <text column='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Gender:nk]' />
              <size column='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[__tableau_internal_object_id__].[cnt:Olympics_DFDA6E1428DA446F8B264A58DF5ADF64:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6CF48AA5-2DE9-4C44-8102-552FBFDAE34F}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;TOP 30&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Olympics (olympics)' name='federated.1mw1s5j13zsggd18nwrcv1xgel0d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1mw1s5j13zsggd18nwrcv1xgel0d'>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Olympics' datatype='integer' name='[__tableau_internal_object_id__].[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Olympics' datatype='table' name='[__tableau_internal_object_id__].[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Olympics_DFDA6E1428DA446F8B264A58DF5ADF64:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Gender:nk]'>
            <groupfilter function='member' level='[none:Gender:nk]' member='&quot;M&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Medal:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Medal:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Medal:nk]' member='&quot;NA&quot;' />
                <groupfilter function='member' level='[none:Medal:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Medal:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Gold&quot;</bucket>
              <bucket>&quot;Silver&quot;</bucket>
              <bucket>&quot;Bronze&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Team:nk]'>
            <groupfilter count='30' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Austria-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Bahamas&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Bonaparte&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Botswana&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Brazil-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Brazil-2&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Burundi&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Canada-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Canada-2&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;China-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;China-2&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;China-3&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Chinese Taipei&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Clearwater&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Cuba&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Czech Republic-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Denmark-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Digby&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Dominican Republic&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Don Schufro&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Elvis Va&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Fiji&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;France-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;France-2&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Gabon&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Georgia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Germany-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Germany-2&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Great Britain&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Great Britain-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Great Britain-2&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Grenada&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Individual Olympic Athletes&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Indonesia-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Italy-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Japan-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Kosovo&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Kyrgyzstan&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Latvia-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Moldova&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Nadine&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Netherlands-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Niger&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;North Korea&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Panama&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Puerto Rico&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Russia-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Russia-2&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Salinero&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Satchmo&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;South Korea&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;South Korea-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Spain-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Spain-2&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Sunrise&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Sweden-2&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Switzerland-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Tajikistan&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Togo&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Uganda&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Ukraine-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;United States-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;United States-2&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Uzbekistan&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Venezuela&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Vietnam&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Team:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[__tableau_internal_object_id__].[cnt:Olympics_DFDA6E1428DA446F8B264A58DF5ADF64:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Medal:nk]</column>
            <column>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Gender:nk]</column>
            <column>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Medal:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[__tableau_internal_object_id__].[cnt:Olympics_DFDA6E1428DA446F8B264A58DF5ADF64:qk]</rows>
        <cols>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Team:nk]</cols>
      </table>
      <simple-id uuid='{7345548F-F3F0-4F06-A46F-BA8FEAAA0DF3}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sheet 3</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Olympics (olympics)' name='federated.1mw1s5j13zsggd18nwrcv1xgel0d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1mw1s5j13zsggd18nwrcv1xgel0d'>
            <column datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Olympics' datatype='integer' name='[__tableau_internal_object_id__].[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Olympics' datatype='table' name='[__tableau_internal_object_id__].[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Olympics_DFDA6E1428DA446F8B264A58DF5ADF64:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Medal:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Medal:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:Medal:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Medal:nk]' member='&quot;Gold&quot;' />
                  <groupfilter function='member' level='[none:Medal:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Summer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Team:nk]'>
            <groupfilter count='30' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Austria-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Bahamas&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Bonaparte&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Botswana&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Brazil-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Brazil-2&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Burundi&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Canada-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Canada-2&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;China-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;China-2&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;China-3&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Chinese Taipei&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Clearwater&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Cuba&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Czech Republic&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Czech Republic-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Denmark-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Digby&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Dominican Republic&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Don Schufro&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Elvis Va&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Fiji&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;France-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;France-2&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Gabon&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Georgia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Germany-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Germany-2&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Great Britain&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Great Britain-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Great Britain-2&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Grenada&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Individual Olympic Athletes&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Indonesia-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Italy-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Japan-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Kosovo&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Kyrgyzstan&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Latvia-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Moldova&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Nadine&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Netherlands-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Niger&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;North Korea&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Panama&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Puerto Rico&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Russia-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Russia-2&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Salinero&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Satchmo&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;South Korea&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;South Korea-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Spain-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Spain-2&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Sunrise&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Sweden-2&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Switzerland-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Tajikistan&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Togo&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Uganda&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Ukraine-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;United States-1&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;United States-2&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Uzbekistan&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Venezuela&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Vietnam&quot;' />
                  <groupfilter function='member' level='[none:Team:nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Team:nk]' direction='DESC' using='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[__tableau_internal_object_id__].[cnt:Olympics_DFDA6E1428DA446F8B264A58DF5ADF64:qk]' />
          <slices>
            <column>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Medal:nk]</column>
            <column>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Season:nk]</column>
            <column>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Medal:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[__tableau_internal_object_id__].[cnt:Olympics_DFDA6E1428DA446F8B264A58DF5ADF64:qk]</rows>
        <cols>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Team:nk]</cols>
      </table>
      <simple-id uuid='{584CAD34-DBB2-491C-9D63-65BAE0564B81}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Olympics (olympics)' name='federated.1mw1s5j13zsggd18nwrcv1xgel0d' />
          </datasources>
          <datasource-dependencies datasource='federated.1mw1s5j13zsggd18nwrcv1xgel0d'>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Olympics' datatype='integer' name='[__tableau_internal_object_id__].[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]' role='measure' type='quantitative' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Olympics' datatype='table' name='[__tableau_internal_object_id__].[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Olympics_DFDA6E1428DA446F8B264A58DF5ADF64]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Olympics_DFDA6E1428DA446F8B264A58DF5ADF64:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Team:nk]'>
            <groupfilter count='30' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Team])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Team:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[__tableau_internal_object_id__].[cnt:Olympics_DFDA6E1428DA446F8B264A58DF5ADF64:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[__tableau_internal_object_id__].[cnt:Olympics_DFDA6E1428DA446F8B264A58DF5ADF64:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Gender:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[__tableau_internal_object_id__].[cnt:Olympics_DFDA6E1428DA446F8B264A58DF5ADF64:qk]</rows>
        <cols>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Team:nk]</cols>
      </table>
      <simple-id uuid='{C9F79A2E-437C-45CA-BADC-D10DECFBDABB}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1300' minheight='800' minwidth='1300' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Olympics (olympics)' name='federated.1mw1s5j13zsggd18nwrcv1xgel0d' />
      </datasources>
      <datasource-dependencies datasource='federated.1mw1s5j13zsggd18nwrcv1xgel0d'>
        <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='26125' id='21' name='Sheet 1' w='13077' x='1846' y='6000' />
        <zone h='48375' id='22' name='Sheet 2' w='71385' x='17077' y='1000' />
        <zone h='10125' id='23' mode='dropdown' name='Sheet 2' param='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Gender:nk]' type-v2='filter' w='12308' x='87692' y='13000' />
        <zone h='9750' id='24' name='Sheet 2' pane-specification-id='0' param='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Medal:nk]' type-v2='color' w='10769' x='87769' y='1750' />
        <zone h='47000' id='30' name='Sheet 4' w='44615' x='1000' y='51875' />
        <zone h='7250' id='32' name='Sheet 4' pane-specification-id='0' param='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Gender:nk]' type-v2='color' w='10769' x='2385' y='41375' />
        <zone h='46250' id='33' name='Sheet 3' w='53385' x='45769' y='53750' />
        <zone h='10125' id='34' mode='dropdown' name='Sheet 3' param='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Season:nk]' type-v2='filter' w='12308' x='86308' y='52250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='50' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='49' param='vert' type-v2='layout-flow' w='98770' x='615' y='1000'>
                <zone h='10125' id='23' mode='dropdown' name='Sheet 2' param='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Gender:nk]' type-v2='filter' w='12308' x='87692' y='13000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48375' id='22' is-fixed='true' name='Sheet 2' w='71385' x='17077' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9750' id='24' name='Sheet 2' pane-specification-id='0' param='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Medal:nk]' type-v2='color' w='10769' x='87769' y='1750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='209' h='26125' id='21' is-fixed='true' name='Sheet 1' w='13077' x='1846' y='6000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47000' id='30' is-fixed='true' name='Sheet 4' w='44615' x='1000' y='51875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='32' name='Sheet 4' pane-specification-id='0' param='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Gender:nk]' type-v2='color' w='10769' x='2385' y='41375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10125' id='34' mode='dropdown' name='Sheet 3' param='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Season:nk]' type-v2='filter' w='12308' x='86308' y='52250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46250' id='33' is-fixed='true' name='Sheet 3' w='53385' x='45769' y='53750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8F2F9D8A-79F4-41E9-A860-46EE5632ED75}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Gender:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[__tableau_internal_object_id__].[cnt:Olympics_DFDA6E1428DA446F8B264A58DF5ADF64:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{F0546E1A-4AC3-405A-B4C5-BBD2709339C1}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Gender:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Medal:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:City:nk]</field>
            <field>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Gender:nk]</field>
            <field>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Medal:nk]</field>
            <field>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{7F94500C-D1BD-4A14-8257-4586A49DBFCF}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Season:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:City:nk]</field>
            <field>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Gender:nk]</field>
            <field>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Medal:nk]</field>
            <field>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Season:nk]</field>
            <field>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{AD1E5464-6E36-4298-B5F5-EC4C4E79A516}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:City:nk]</field>
            <field>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Gender:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{FA5672D1-8BD3-4F70-846F-DA9C2255ECA0}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[__tableau_internal_object_id__].[cnt:Olympics_DFDA6E1428DA446F8B264A58DF5ADF64:qk]</field>
                    <field>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Gender:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>23481</value>
                  <value>&quot;F&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Medal:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.1mw1s5j13zsggd18nwrcv1xgel0d].[none:Gender:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{0779815E-8C40-45BF-A440-FB4A203E9590}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='164' name='Sheet 1' width='164'>
      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
      hWRIwUIypPgvzfugJEOEpmEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      hmjQJLz7/H+WxpYJu6opXgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      oAtgAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
